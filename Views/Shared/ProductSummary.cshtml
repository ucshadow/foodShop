@model FoodStore.Entities.Product

@using FoodStore.Infrastructure
@using FoodStore.Infrastructure.Discounts
@using FoodStore.Infrastructure.Stickers


@{
    var stickers = StickerManagerProvider.StickerManager.GetStickersOnProduct(Model.ProductID);
}

<div class="">
    <div class="card text-center card-product">
        <div class="card-product__img">

            <a href="@Url.Action("Details", "Product", new {productName = @Model.Name})">
                <div class="card-product__title btn-info" style="width:100%">@Model.Name</div>
                <img class="card-img" src="@Model.Picture" alt="">
            </a>
            @if (stickers != null)
            {
                foreach (var s in stickers)
                {
                    <p class="btn-dark"> @s.Name </p>
                }
            }
            <div class="card-product__title btn-default" style="width:100%">[Rating: @Model.Rating] [Votes: @Model.NumberOfVotes]</div>

        </div>
        <div class="card-body">

            <p>@Model.Category</p>

            @if (Model.Discount > 0)
            {
                <p class="card-product__price" style="text-decoration: line-through;">@Model.Price</p>
                <p class="card-product__price" style="color:darkred">@(Helpers.CalculateDiscount(@Model.Price, Model.Discount))</p>
            }
            else
            {
                <p class="card-product__price">@Model.Price</p>
            }

            @using (Html.BeginForm("AddToCart", "Cart"))
            {
                @Html.HiddenFor(x => x.ProductID)
                @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                <button style="margin-bottom:5px;"><i class="ti-shopping-cart"></i>Add</button>
            }

            <div class="btn-danger" style="cursor:pointer">
                <a href="@Url.Action("Nutrition", "Nutrition", new {productName = @Model.Name})">Nutrition data</a>
            </div>

            @if (User.IsInRole("Admin"))
            {
                <a href=@("/Admin/Edit?ProductID=" + Model.ProductID)>
                    <div style="position:absolute; right:0; bottom:0;" onclick="toggelProductForm(event, @Model.ProductID)">
                        edit
                    </div>
                </a>

                if (!DiscountProvider.DiscountsManager.ProductExists(@Model.ProductID))
                {
                    using (Html.BeginForm("AddToDailyDiscount", "Admin", FormMethod.Post, new { @style = "position:absolute; bottom:0px;left:0px" }))
                    {
                        @Html.Hidden("productID", @Model.ProductID)
                        <input type="submit" value="D" class="btn btn-info" />
                    }
                }


            }
        </div>
    </div>
</div>